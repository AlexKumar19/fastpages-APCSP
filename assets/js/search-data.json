{
  
    
        "post0": {
            "title": "Jupyter Notebook quiz",
            "content": "This is a quiz that will go over the basic vocabulary that was covered in the the jupyter document. . correct = 0 #function that takes in the question and the answer, then it determines whether the input is correct or incorrect then changes the variable correct depending on the answer def question(prompt, answer): #prints the question print(&quot;Question: &quot; + prompt) #takes in the input msg = input() #checks if the answer is correct or not if (msg).lower() == answer: #prints if the message is correct print(msg + &quot; is correct!&quot;) #changes the correct variable global correct correct += 1 #checks to see if its false else: #prints out that the answer is false print(msg + &quot; is incorrect!&quot;) #Questions question(&quot;What function woud you use to output text?&quot;, &quot;print&quot;) question(&quot;What function would you use to take input from the user?&quot;, &quot;input&quot;) question(&quot;What keyword do you use to define a function?&quot;, &quot;def&quot;) question(&quot;what function checks whether or not a certain condition is true or false?&quot;, &quot;if&quot;) Percentage = correct/4 print(&quot;You got &quot; +str(int(Percentage*100))+&quot;%&quot;) . Question: What function woud you use to output text? print is correct! Question: What function would you use to take input from the user? input is correct! Question: What keyword do you use to define a function? def is correct! Question: what function checks whether or not a certain condition is true or false? if is correct! You got 100% .",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/jupyter/csp/2022/08/28/basicpythonquiz.html",
            "relUrl": "/jupyter/csp/2022/08/28/basicpythonquiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Resume (3)",
            "content": "Alex Kumar . 15489 Tanner Ridge Road, San Diego, CA 92127 . (858)-757-6371 . alex.k.kumar@gmail.com . Education . Del Norte High School (Junior) . 4.14 GPA . | Completed AP Calculus AB, AP Chemistry . Currently enrolled in AP Computer Science Principles, AP Physics, AP Calculus BC . | . | . Work Experience . Code Ninjas: Code Sensei (2022 - Present) . Led robotics camps, and guided students through the process of coding and engineering robots . | Used JavaScript, C#, Python, and Java to teach core computer science concepts . | . Extracurriculars . Soles In need: Treasurer (2022 - present) . Organize and plan meetings and keep track of funding and donations . Worked with team to collect hundreds of shoes to donate to those in need . | . | Engage audiences during school activities using public speaking skills . | . Del Norte Cultural Diversity Club: President (2021 - present) . Teaching and spreading knowledge about various cultures . | Public speaking to audiences to teach and create a better environment . | . STEM Enablers: Vice-President (2021 - Present) . Teach students topics like Chemistry and math . | Collect donations to distribute to other non-profits . | . Sports . Varsity Basketball (2021 - Present) . Volunteered to coach younger athletes . | Helped organize and coordinate team bonding events . | . Varsity Track and Field (2021 - Present) . Led the jumps team and got ranked regionally for triple jump and high jump . | . Skills . Excellent worker with Office 360 (Excel, PowerPoint, docs) . | Experience using various packages in python, including Pandas, NumPy, Matplotlib, TensorFlow, Scikit-Learn . | Knowledge in machine learning models, including artificial neural networks, K-Nearest-Neighbors, Linear regression, and logistic regression . | .",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/2022/08/26/Resume-(3).html",
            "relUrl": "/2022/08/26/Resume-(3).html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Bash toolset validation",
            "content": "Python Version . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Conda Packages . TestForPackage(){ echo &quot;Test if $1 was downloaded via conda&quot; if conda list | grep -q $1; then echo &quot;There is $1&quot; else echo &quot;There is no $1&quot; fi } #Calls the function to test for packages TestForPackage &quot;jupyter&quot; TestForPackage &quot;nodejs&quot; . Test if jupyter was downloaded via conda There is jupyter Test if nodejs was downloaded via conda There is nodejs . Jupyter Checks . TestForKernellInstallation(){ #outputs test echo &quot;Test if $1 was installed&quot; #checks jupyter kernelspec list to find the called package if jupyter kernelspec list | grep -q $1; then echo &quot;There is $1&quot; else echo &quot;There is no $1&quot; fi } #calls the function for certain packages TestForKernellInstallation &quot;bash&quot; TestForKernellInstallation &quot;javascript&quot; TestForKernellInstallation &quot;python3&quot; . Test if bash was installed There is bash Test if javascript was installed There is javascript Test if python3 was installed There is python3 .",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/jupyter/csp/2022/08/25/bashvalidatetoolsetup.html",
            "relUrl": "/jupyter/csp/2022/08/25/bashvalidatetoolsetup.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "APCSP Bash Notes 08/25/22",
            "content": "###Bash . cd #cd stands for &quot;change directory&quot; cd vscode #goes to vscode directory Ls #tells the user the directory . Bash allows us to create scripts that can automatically download packages and navigate the terminal . ###Cloud . The cloud is up in the skies near the moon and it allows us to clone repositories down to our solid state drive. This allows us to edit the repositories on out own devices remotely. When you pull, you update your clone and when you push, it adds your changesinto the repository .",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/markdown/csp/2022/08/25/NotesAPCSP-BashLecture.html",
            "relUrl": "/markdown/csp/2022/08/25/NotesAPCSP-BashLecture.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Extra info about myself!",
            "content": "Extra info about myself: Hi my name is alex, and some things that I enjoy about school is going to my basketball practice, I enjoy doing ceramics, and I really love to go to physics class .",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/markdown/aboutme/2022/08/22/Aboutme.html",
            "relUrl": "/markdown/aboutme/2022/08/22/Aboutme.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fastpages Notebook Blog Post",
            "content": "Python . Using python to pring &quot;Hello&quot; . print(&#39;Hello world, this is Alex Kumar&#39;) . Hello world, this is Alex Kumar . info =&#39;I like to play basketball and I also enjoy going to the gym&#39; print(&quot;Here are some things about me: &quot; + info) . Here are some things about me:I like to play basketball and I also enjoy going to the gym .",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/jupyter/aboutme/2022/08/21/firstjuypternotebook.html",
            "relUrl": "/jupyter/aboutme/2022/08/21/firstjuypternotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Alex's first blog post!",
            "content": "Hello, my name is alex and this is a sample markdown post. I have many hobbies that I do in my free time: Playing basketball, track and field, going to the beach, and playing with my dog! .",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/markdown/aboutme/2022/08/20/Post.html",
            "relUrl": "/markdown/aboutme/2022/08/20/Post.html",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://alexkumar19.github.io/fastpages-APCSP/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "notes",
          "content": "This page contains my notes from all classes, I use this page to go back to lectures or past presentations to review over important ideas so I can apply it to current problems! . Notes Table of Contents . Date subject link . 08/25/22 | CSP | Bash lecture | .",
          "url": "https://alexkumar19.github.io/fastpages-APCSP/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://alexkumar19.github.io/fastpages-APCSP/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://alexkumar19.github.io/fastpages-APCSP/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}